# Generated by Django 5.2.4 on 2025-09-10 04:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HOD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('department', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=100)),
                ('district_name', models.CharField(max_length=100)),
                ('block_name', models.CharField(max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtpLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.CharField(max_length=15)),
                ('otp_code', models.CharField(max_length=6)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PublicUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('father_or_mother_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('alternate_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('aadhar_or_govt_id', models.CharField(max_length=20)),
                ('permanent_address', models.TextField()),
                ('current_address', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('block_tehsil_taluka', models.CharField(max_length=100)),
                ('village_town_city', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('access_start_time', models.DateTimeField(blank=True, null=True)),
                ('access_end_time', models.DateTimeField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('area_of_responsibility', models.CharField(blank=True, max_length=100, null=True)),
                ('political_experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_positions', models.TextField(blank=True, null=True)),
                ('pan_card_number', models.CharField(blank=True, max_length=20, null=True)),
                ('assigned_districts', models.TextField(blank=True, null=True)),
                ('assigned_blocks', models.TextField(blank=True, null=True)),
                ('local_area_knowledge', models.BooleanField(blank=True, null=True)),
                ('booths_handled', models.PositiveIntegerField(blank=True, null=True)),
                ('volunteer_experience', models.TextField(blank=True, null=True)),
                ('reference_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_person_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('booth_number', models.CharField(blank=True, max_length=50, null=True)),
                ('ward_name', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_area', models.CharField(blank=True, max_length=100, null=True)),
                ('voter_id_number', models.CharField(blank=True, max_length=50, null=True)),
                ('door_to_door', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, null=True)),
                ('availability', models.CharField(blank=True, choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time')], max_length=10, null=True)),
                ('assigned_state', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_district', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_block', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_panchayat', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/')),
                ('id_proof', models.FileField(blank=True, null=True, upload_to='id_proofs/')),
                ('address_proof', models.FileField(blank=True, null=True, upload_to='address_proofs/')),
                ('digital_signature', models.FileField(blank=True, null=True, upload_to='signatures/')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('reply', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('reply_seen', models.BooleanField(default=False)),
                ('sender_role', models.CharField(blank=True, max_length=50)),
                ('is_group', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='complaint_photos/')),
                ('voter_id_image', models.ImageField(blank=True, null=True, upload_to='voter_id_images/')),
                ('address', models.TextField()),
                ('state', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('block', models.CharField(max_length=100)),
                ('panchayat', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('issue_type', models.CharField(choices=[('crime', 'Crime'), ('education', 'Education'), ('road', 'Road'), ('water_supply', 'Water Supply'), ('electricity', 'Electricity'), ('health', 'Health'), ('corruption', 'Corruption'), ('public_safety', 'Public Safety'), ('transportation', 'Transportation'), ('environment', 'Environment'), ('others', 'Others')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('upload_photo', models.ImageField(blank=True, null=True, upload_to='complaint_uploads/photos/')),
                ('upload_video', models.FileField(blank=True, null=True, upload_to='complaint_uploads/videos/')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Solved', 'Solved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('forward_to', models.CharField(blank=True, max_length=150, null=True)),
                ('forward_reason', models.TextField(blank=True, null=True)),
                ('public_notice', models.TextField(blank=True, null=True)),
                ('notice_updated_at', models.DateTimeField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('forward_chain', models.JSONField(blank=True, default=list)),
                ('status_updated_at', models.DateTimeField(blank=True, null=True)),
                ('send_to', models.CharField(choices=[('booth', 'Booth'), ('block', 'Block'), ('district', 'District'), ('state', 'State'), ('none', 'None')], default='none', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('complaint_unique_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FileField(upload_to='complaint_files/')),
                ('file_type', models.CharField(max_length=10)),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='core.complaint')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('state', 'State Level'), ('district', 'District Level'), ('block', 'Block Level'), ('core', 'Core Committee'), ('head_office', 'Head Office'), ('booth', 'Booth Level')], max_length=20)),
                ('send_to_level', models.CharField(blank=True, choices=[('state', 'State Level'), ('district', 'District Level'), ('block', 'Block Level'), ('core', 'Core Committee'), ('head_office', 'Head Office'), ('booth', 'Booth Level')], max_length=50, null=True)),
                ('send_to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('role_name', 'level')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_with_this_role', to='core.role'),
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
